---
# File: .github/actions/build-and-push-image/action.yaml
name: 'Build and push image'
description: 'Build and push image to ECR registry'

inputs:
  image-name:
    description: 'Image name'
    required: true

  ecr-registry:
    description: 'ECR registry'
    required: true

  dockerhub-username:
    description: 'Dockerhub username'
    required: true

  dockerhub-password:
    description: 'Dockerhub password'
    required: true

runs:
  using: 'composite'
  steps:
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      with:
        registries: ${{ inputs.ecr-registry }}

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ inputs.dockerhub-username }}
        password: ${{ inputs.dockerhub-password }}

    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ${{ steps.login-ecr.outputs.registry }}/${{ inputs.image-name }}
        flavor: |
          latest=false
        tags: |
          type=ref,event=tag
          type=ref,prefix=PR-,suffix=-{{date 'YYYYMMDDHHmmss'}},event=pr
          type=ref,suffix=-{{date 'YYYYMMDDHHmmss'}},event=branch

    - name: Set up Docker Context for Buildx
      id: buildx-context
      shell: bash
      run: |
        docker context create builders
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
      with:
        endpoint: builders

    - name: Build and push image
      id: build
      uses: docker/build-push-action@v3
      with:
        context: .
        builder: ${{ steps.buildx.outputs.name }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        load: true
        push: false
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - uses: ./.github/actions/test-image
      name: Test builded image
      with:
        image: ${{ steps.build.outputs.imageid }}

    - name: Build and push image
      uses: docker/build-push-action@v3
      if: ${{ github.event_name != 'pull_request' }}
      with:
        context: .
        builder: ${{ steps.buildx.outputs.name }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        push: ${{ github.event_name != 'pull_request' }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
